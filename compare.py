import os
import pandas as pd
import matplotlib.pyplot as plt

# Function to extract test accuracy from log files
def extract_test_accuracy(log_filepath):
    with open(log_filepath, 'r') as file:
        lines = file.readlines()
        for line in lines:
            if line.startswith("test accuracy"):
                return float(line.split(":")[1])
    return None

# Directory containing log files
log_directory = "log"

# Initialize dictionaries to store test accuracy values for each model across datasets
accuracy_data_word2vec = {}
accuracy_data_fasttext = {}
accuracy_data_bow = {}
accuracy_data_tfidf = {}

# Iterate over each dataset directory
for dataset_name in os.listdir(log_directory):
    dataset_dir = os.path.join(log_directory, dataset_name)
    if os.path.isdir(dataset_dir):
        # Initialize dictionaries to store test accuracy for each model within the dataset
        print("Processing dataset:", dataset_name)  # Debugging line
        dataset_accuracy_word2vec = {}
        dataset_accuracy_fasttext = {}
        dataset_accuracy_bow = {}
        dataset_accuracy_tfidf = {}
        
        # Iterate over each log file in the dataset directory
        for filename in os.listdir(dataset_dir):
            if filename.endswith("_log.txt"):
                # Extract model name from the filename
                model_name = filename.split("_")[0]
                
                # Read the log file and extract test accuracy
                log_filepath = os.path.join(dataset_dir, filename)
                test_accuracy = extract_test_accuracy(log_filepath)
                
                if test_accuracy is not None:
                    if model_name == "Word2Vec":
                        dataset_accuracy_word2vec[dataset_name] = test_accuracy
                    elif model_name == "FastText":
                        dataset_accuracy_fasttext[dataset_name] = test_accuracy
                    elif model_name == "BoW":
                        dataset_accuracy_bow[dataset_name] = test_accuracy
                    elif model_name == "TF-IDF":
                        dataset_accuracy_tfidf[dataset_name] = test_accuracy
        
        # Update global accuracy dictionaries with dataset accuracy dictionaries
        accuracy_data_word2vec.update(dataset_accuracy_word2vec)
        accuracy_data_fasttext.update(dataset_accuracy_fasttext)
        accuracy_data_bow.update(dataset_accuracy_bow)
        accuracy_data_tfidf.update(dataset_accuracy_tfidf)

# Get a list of all datasets
datasets = list(set(accuracy_data_word2vec.keys()).union(accuracy_data_fasttext.keys(), accuracy_data_bow.keys(), accuracy_data_tfidf.keys()))

# Initialize lists to store accuracies for each model
accuracies_word2vec = []
accuracies_fasttext = []
accuracies_bow = []
accuracies_tfidf = []
#dataset_Timestamp_logs
# Iterate over datasets to populate accuracies lists
for dataset in datasets:
    accuracies_word2vec.append(accuracy_data_word2vec.get(dataset, 0))
    accuracies_fasttext.append(accuracy_data_fasttext.get(dataset, 0))
    accuracies_bow.append(accuracy_data_bow.get(dataset, 0))
    accuracies_tfidf.append(accuracy_data_tfidf.get(dataset, 0))

# Plotting
plt.figure(figsize=(12, 8))

bar_width = 0.2
index = range(len(datasets))

plt.bar(index, accuracies_word2vec, bar_width, label='Word2Vec')
plt.bar([i + bar_width for i in index], accuracies_fasttext, bar_width, label='FastText')
plt.bar([i + 2*bar_width for i in index], accuracies_bow, bar_width, label='BoW')
plt.bar([i + 3*bar_width for i in index], accuracies_tfidf, bar_width, label='TF-IDF')

plt.xlabel('Datasets')
plt.ylabel('Test Accuracy')
plt.title('Test Accuracy Comparison Across Datasets')
plt.xticks([i + 1.5 * bar_width for i in index], datasets, rotation=45)
plt.legend()
plt.tight_layout()
plt.show()


# Plotting Word2Vec Accuracy Across Datasets
plt.figure(figsize=(12, 8))
plt.bar(datasets, accuracies_word2vec, label='Word2Vec')
plt.xlabel('Datasets')
plt.ylabel('Test Accuracy')
plt.title('Word2Vec Test Accuracy Across Datasets')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()

# Plotting FastText Accuracy Across Datasets
plt.figure(figsize=(12, 8))
plt.bar(datasets, accuracies_fasttext, label='FastText')
plt.xlabel('Datasets')
plt.ylabel('Test Accuracy')
plt.title('FastText Test Accuracy Across Datasets')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()

# Plotting BoW Accuracy Across Datasets
plt.figure(figsize=(12, 8))
plt.bar(datasets, accuracies_bow, label='BoW')
plt.xlabel('Datasets')
plt.ylabel('Test Accuracy')
plt.title('BoW Test Accuracy Across Datasets')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()

# Plotting TF-IDF Accuracy Across Datasets
plt.figure(figsize=(12, 8))
plt.bar(datasets, accuracies_tfidf, label='TF-IDF')
plt.xlabel('Datasets')
plt.ylabel('Test Accuracy')
plt.title('TF-IDF Test Accuracy Across Datasets')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()

