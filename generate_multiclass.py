import os

# Function to read dataset files and extract fragments with modified labels
def process_dataset(dataset_file, multiclass_file, dataset_index):
    #print("dataset_file is:", dataset_file)
    with open(dataset_file, 'r') as f:
        fragments = []
        current_fragment = []
        for line in f:
            line = line.strip()
            if line.startswith("---"):  # Indicates end of a fragment
                if current_fragment:  # Check if the fragment is not empty
                    last_label = current_fragment[-1].split()[-1]  # Extract last label
                    if last_label == '0':  # Check if the last label is 0
                        new_label = '0'  # Modify label for label 0
                    else:
                        new_label = str(dataset_index + 1)  # Modify label based on dataset index
                    last_line_index = len(current_fragment) - 1
                    current_fragment[last_line_index] = new_label  # Replace last label
                    fragments.extend(current_fragment)  # Append fragment lines to the list
                    fragments.append("---------------------------------------------")  # Add dotted line between fragments
                    current_fragment = []  # Reset current fragment
            else:
                current_fragment.append(line)  # Add line to current fragment

    # Write fragments to multiclass file under train_data directory
    with open(os.path.join(os.path.dirname(dataset_file), multiclass_file), 'a') as f:
        f.write('\n'.join(fragments) + '\n\n')  # Write fragments with modified labels

def count_fragments(dataset_file):
    label_counts = {}
    total_fragments = 0
    with open(dataset_file, 'r') as f:
        current_label = None
        for line in f:
            line = line.strip()
            if line.startswith("---"):  # Indicates end of a fragment
                if current_label is not None:
                    label_counts[current_label] = label_counts.get(current_label, 0) + 1  #0 is the default value that will be returned if the key current_label is not found in the label_counts dictionary.
                    total_fragments += 1
                current_label = None  # Reset current label for the next fragment
            else:
                current_label = line  # Update current label with the label found at the last line
    return label_counts, total_fragments

# Path to train_data directory
train_data_dir = "train_data"

# Output multiclass dataset file
multiclass_file = "dataset_multiclass.txt"

if os.path.exists("train_data/dataset_multiclass_2.txt"):
    # If it exists, open it in read mode and read its contents
    with open("train_data/dataset_multiclass.txt", 'r') as f:
        # Read the contents of the file
        file_contents = f.read()


else:        
    # Iterate through each dataset file in train_data directory
    for i, file in enumerate(os.listdir(train_data_dir)):
        if file.startswith("dataset"):
            dataset_file = os.path.join(train_data_dir, file)
            print("dataset:",dataset_file)
            label_counts, total_fragments = count_fragments(dataset_file)
            print("Number of fragments under each label:")
            for label, count in label_counts.items():

                print(f"Label {label}: {count}")

            print(f"Total number of fragments: {total_fragments}")
            process_dataset(dataset_file, multiclass_file, i)  # Pass dataset index to function
"""
1-dataset: train_data\dataset_CDAV.txt
Number of fragments under each label:
Label 0: 1400
Label 1: 1400
Total number of fragments: 2800

2-dataset: train_data\dataset_delegate.txt
Number of fragments under each label:
Label 0: 670
Label 1: 310
Total number of fragments: 980

3-dataset: train_data\dataset_integerbig.txt
Number of fragments under each label:
Label 0: 1400
Label 1: 1400
Total number of fragments: 2800

4-dataset: train_data\dataset_Integeroverflow.txt
Number of fragments under each label:
Label 0: 370
Label 1: 180
Total number of fragments: 550

5-dataset: train_data\dataset_IntegerUnderFlow.txt
Number of fragments under each label:
Label 1: 2000
Label 0: 2000
Total number of fragments: 4000

6-dataset: train_data\dataset_reentry.txt
Number of fragments under each label:
Label 1: 612
Total number of fragments: 1224

7-dataset: train_data\dataset_Timestamp.txt
Number of fragments under each label:
Label 0: 1454
Label 1: 1454
Total number of fragments: 2908
"""