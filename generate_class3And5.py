import os

# Function to process dataset fragments and modify labels
def process_dataset(class3file,class5file, dataset_Three_classes_file):
    fragments_all = []

    with open(class3file, 'r') as f:
        current_fragment = []
        for line in f:
            line = line.strip()
            if line == "---------------------------------":  # Indicates end of a fragment
                if current_fragment:  # Check if the fragment is not empty
                    fragments_all.extend(current_fragment)  # Append fragment lines to the list
                    fragments_all.append("---------------------------------")  # Add dotted line between fragments
                    current_fragment = []  # Reset current fragment
            else:
                current_fragment.append(line)  # Add line to current fragment
    
    with open(class5file, 'r') as f2:
        current_fragment = []
        for line in f2:
            line = line.strip()
            if line == "---------------------------------":  
                last_label = current_fragment[-1].split()[-1]  # Extract last label
                if last_label == '1':  # Check if the last label is '1'
                   current_fragment[-1] = current_fragment[-1].replace('1', '2')

                fragments_all.extend(current_fragment)  # Append fragment lines to the list
                fragments_all.append("---------------------------------")  # Add dotted line between fragments
                current_fragment = []  # Reset current fragment
            else:
                current_fragment.append(line)  # Add line to current fragment

    # Write fragments to output file
   
    with open(dataset_Three_classes_file, 'a') as f_out:
         f_out.write('\n'.join(fragments_all) + '\n\n')  # Write fragments with modified labels

# Function to count the number of fragments with different labels
def count_fragments_labels(dataset_Three_classes_file):
    count_label_0 = 0
    count_label_1 = 0
    count_label_2 = 0

    # Read dataset_Three_classes file
    with open(dataset_Three_classes_file, 'r') as f:
        current_fragment = []  # List to store current fragment lines
        for line in f:
            line = line.strip()
            if line.startswith("---------------------------------"):  # Indicates end of a fragment
                if current_fragment:  # Check if the current fragment is not empty
                    last_label = current_fragment[-1].split()[-1] # Get the last line of the current fragment
                    #last_label = last_line.split()[-1]  # Extract last label
                    if last_label == '0':
                        count_label_0 += 1
                    elif last_label == '1':
                        count_label_1 += 1
                    elif last_label == '2':
                        count_label_2 += 1
                    current_fragment = []  # Reset current fragment
            else:
                current_fragment.append(line)  # Add line to current fragment

    return count_label_0, count_label_1, count_label_2

train_data_dir = "train_data"

dataset_Three_classes_file = os.path.join(train_data_dir, "dataset_Class3And5Only.txt")
if os.path.exists(dataset_Three_classes_file):
    # If it exists, open it in read mode and read its contents
    with open(dataset_Three_classes_file, 'r') as f:
        # Read the contents of the file
        file_contents = f.read()
# Path to train_data directory
        
else:
    # Output dataset file

    files=os.listdir(train_data_dir)
    class5file = 'train_data/dataset_IntegerUnderFlow.txt'
    class3file = 'train_data/dataset_integerbig.txt'


    process_dataset(class3file, class5file, dataset_Three_classes_file)  # Pass dataset index to function


# Count the number of fragments under labels 0, 1, and 2
count_label_0, count_label_1, count_label_2 = count_fragments_labels(dataset_Three_classes_file)
print("Number of fragments with label 0:", count_label_0)
print("Number of fragments with label 1:", count_label_1)
print("Number of fragments with label 2:", count_label_2)

"""
train_data/dataset_Integeroverflow.txt
Label 0: 370
Label 1: 180
Total number of fragments: 550

train_data/dataset_Integeroverflow.tx
abel 1: 2000
Label 0: 2000
Total number of fragments: 4000

"""